import logging
import os
from os import getenv
from aiogram import Bot, Dispatcher, types, executor
from aiogram.utils.exceptions import BotBlocked
API_TOKEN = os.getenv('BOT_TOKEN')

logging.basicConfig(level=API_TOKEN)

bot = Bot(token=API_TOKEN)
#–î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot)
#/start
@dp.message_handler(commands=["start"]) #/start
async def cmd_start(message:types.Message):
    await message.answer("Hello!")

@dp.message_handler(commands=["help"])
async def help(message:types.Message):
    await message.answer("""/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    /help - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏
     /send - –ü—Ä–∏—Å–ª–∞—Ç—å —ç–º–æ–¥–∂–∏ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ / send [–∂–∏–≤–æ—Ç–Ω–æ–µ]
      / dice - –ò–≥—Ä–∞""")

@dp.message_handler(commands="send")
async def send_animal(message: types.Message):
    animals_emojis = {"cat": "üò∫ ", "dog": "üê∂", "unicorn": "ü¶Ñ"}
    args = message.get_args()
    await message.answer(animals_emojis.get(args, f"–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞! –í—ã–±–æ—Ä : {', '.join(animals_emojis.keys())}"))

@dp.message_handler(commands="dice")
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


if __name__=='__main__':
    executor.start_polling(dp,skip_updates=True)
